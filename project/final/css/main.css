/* colors:
brown:               #3f3433
off pink:            #DB93B0
idk other pink?:     #F7BFB4
light green:         #7DAF9C
green:               #23967F */

/* CSS RESET */
/* Just makes sense to do */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img {
    display:block;
    max-width: 100%;
    height: auto;
}

/* Background */
/* using grid here for my main page layout */
/* basically the main content is positioned with grid and since I wanted nearly everything else to stay in place that had to be setup with fixed position so the grid has empty space in the grid itself */
body {
    display: grid;
    grid-template-rows: 10vh auto;
    grid-template-columns: 18vw 80vw;
    background-image: url("../../img/background.png");
}

/* 3d printing technologies grid layout */
.articleTechGrid {
    display: grid;
    /* creating the grid layout */
    grid-template-rows: auto auto auto;
    grid-template-columns: auto auto auto auto auto auto;
}
/* placement of all grid elements */
.techImg1 {
    grid-row: 2 / 2;
    grid-column: 1 / 4;
    padding: 0.5rem;
}
.techImg2 {
    grid-row: 2 / 2;
    grid-column: 4/7;
    padding: 0.5rem;
}

.tech1 {
    grid-row: 3 / 3;
    grid-column: 1/3;
    padding: 0.5rem;
}
.tech2 {
    grid-row: 3 / 3;
    grid-column: 3/5;
    padding: 0.5rem;
}
.tech3 {
    grid-row: 3 / 3;
    grid-column: 5/7;
    padding: 0.5rem;
}
.headingScroll {
    grid-row: 1/1;
    grid-column: 1/7;
    padding: 0.5rem;
}

/* IMG */
img {
    border: 5px double #23967f;
    border-radius: 10%;
    outline: 2px solid #7daf9c;
    margin: 0.5rem;
}
/* placing images on the side */
/* doing this does end up creating the need for alot of breaks I imagine I can use flex or grid to tidy this up real nice so i'll leave this be for the time being */
.sidePlacement {
    float: right;
}
/* this is so the caption actual appear where I want it to */
figcaption {
    clear: both;
}

/* the image on the advanced page looked pretty bad with the radius so it had to go */
.noRadius {
    border-radius: 0;
}
/* gettign the caption to align with the imgs */
figcaption {
    margin-left: 0.5rem;
}

.centerImg {
    border-radius: 0;
    margin: auto;
}

.paletteCaption {
    text-align: center;
}

/* Header */
header {
    position: fixed;
    background-color: #3f3433;
    color: #F7BFB4;
    text-align: center;
    padding: 1.2rem;
    height: 10vh;
    width: 100vw;
    z-index: 1;
}

h1 {
    font-size: 5rem;
}

hr {
    margin-top: 1.5rem;
    margin-bottom: 1rem;
    color: #23967f;
}

/* fixed position is used to keep nav in place */
nav {
    position: fixed;
    top: 105px;
    /* width is setup to be the same as what is empty space in the grid */
    width: 18vw;
    height: 92vh;
    text-align: justify;
    background-color: #3f3433;
    padding: 2rem;
    padding-top: 2rem;
    padding-right: 1rem;
    grid-row: 1/2;
    grid-column: 1/2;
}

nav h4{
    font-size: 1.75rem;
}
/* just getting the descriptors for waht the links are a little different */
.navtext {
    font-size: 1.25rem;
}

/* Links */
a:any-link {
    color: #23967F
}

a:visited {
    color: #db93b0;
}

a:hover {
    color: #7DAF9C;
}

/* Main */
/* it appears alot here gets in the way of future styling so commented out */
main {
/*     background-color: #F7BFB4; */
    color: #3f3433;
    grid-row: 2/2;
    grid-column: 2/2;
}

/* Headings */
h2 {
    font-size: 3rem;
    background-color:#db93b0;
    text-align: center;
}

.headingScroll {
    text-align: center;
    /* fancy scrolling headings unfortunately it seems i can't get the heading background to span the whole width without sacrificing my margin and padding around the articles */
    position: sticky;
    /* slightly less than the value for the .mainMain class so headings are flush with the bottom of the header when scrolling */
    top: 10vh;
}

h3 {
    font-size: 2rem;
}

h4 {
    font-size: 1.4rem;
}
/* perhaps i should have a utility class section for stuff like this */
.center {
    text-align: center;
}
.center h3 {
    font-size: 1.5rem;
}


/* Sections/Articles */
/* using a class on the articles and a div to give them some padding and margin to more easily tell main sections apart */
/* using div because naming the section where the div is doesn't make much sense here it used to be an article though */
/* added .articleTechGrid class as the class needed to change for where i applied the grid */
article, .articleTechGrid, .articleMatsGrid {
    background-color: rgb(247, 191, 180);
    margin: 0.5rem;
    padding: 1.5rem;
    padding-top: 0.25rem;
    padding-bottom: 0.55rem;
}

/* Something I'm proud of here managed with a larger section around the 2 smaller ones I got 2 columns with the break where I want it. */
.introColumnsOut {
    columns: 2
}

.introColumnsIn {
    break-inside: avoid;
    padding: 0.75rem;
}

/* Table styling */
table {
    border: 3px solid;
    border-spacing: 0px;
    border-color: #3f3433;
    margin: auto;
    background-color: #7DAF9C;
}

tr, th, td {
    border: 1px solid;
    border-color: #3f3433;
    padding: 0.25rem;
    color: #3f3433;
    font-size: 1.5rem;
}

/* Footer */
footer {
    grid-row: 3/4;
    grid-column: 1/3;
    background-color: #3f3433;
    color: #F7BFB4;
    padding: 0.5rem;
    text-align: center;
}

/* Form */
form {
    color: #3f3433;
    padding: 0.5rem;
    background-color: #F7BFB4;
}

fieldset {
    padding: 0.25rem;
    border: 4px #3f3433 double;
}

legend {
    font-size: 1.25rem;
}

button {
    margin-top: 0.25rem;
    padding: 0.1rem;
}

/* XS */
@media screen and (max-width: 640px) {
    /* font size changes */
    h1 {
        font-size: 3rem;
    }
    h2 {
        font-size: 2.2rem;
    }
    h3 {
        font-size: 1.5rem;
    }
    p {
        font-size: 0.75rem;
    }
    ol, ul {
        font-size: 0.75rem;
    }
    tr, th, td {
        font-size: 0.75rem;
    }
    /* grid adjustments */
    header {
        padding: 0rem;
        height: 4rem;
    }
    main {
        grid-row: 2/2;
        grid-column: 1/3;
    }
    /* had to add another nav and define them with classes feels very hacky */
    .verticalNav {
        left: -10000px;
    }
    .horizontalNav {
        position: relative;
        top: 4rem;
        width: 100vw;
        height: 5rem;
        text-align: center;
        padding: 0rem;
    }
    body {
        grid-template-rows: 9rem auto;
    }
    .headingScroll {
        top: 4rem
    }
    img {
        max-width: 50%;
    }
    textarea {
        width: 15rem;
    }
}

/* SMALL */
/* almost no change here just don't see what could make anysense aside from slightly larger font */
@media screen and (min-width: 640px) {
    /* font size changes */
    h1 {
        font-size: 3rem;
    }
    h2 {
        font-size: 2.2rem;
    }
    h3 {
        font-size: 1.5rem;
    }
    p {
        font-size: 1rem;
    }
    ol, ul {
        font-size: 1rem;
    }
    tr, th, td {
        font-size: 1rem;
    }
    /* grid adjustments */
    header {
        padding: 0rem;
        height: 4rem;
    }
    main {
        grid-row: 2/2;
        grid-column: 1/3;
    }
    /* had to add another nav and define them with classes feels very hacky */
    .verticalNav {
        left: -10000px;
    }
    .horizontalNav {
        position: relative;
        top: 4rem;
        width: 100vw;
        height: 5rem;
        text-align: center;
        padding: 0rem;
    }
    body {
        grid-template-rows: 9rem auto;
    }
    .headingScroll {
        top: 4rem
    }
    img {
        max-width: 50%;
    }
}

/* MEDIUM */
@media screen and (min-width: 768px) {
        /* font size changes */
        h1 {
            font-size: 3.5rem;
        }
        h2 {
            font-size: 2.75rem;
        }
        h3 {
            font-size: 2rem;
        }
        p {
            font-size: 1rem;
            line-height: 1.25rem;
        }
        ol, ul {
            font-size: 1rem;
            line-height: 1.25rem;
        }
        tr, th, td {
            font-size: 1rem;
        }
        nav ul{
            font-size: 0.75rem;
        }
        /* grid adjustments */
        header {
            padding: 0rem;
            height: 4.5rem;
        }
        /* had to add another nav and define them with classes feels very hacky */
        .verticalNav {
            top: 3.5rem;
            width: 16vw;
            padding: 1rem;
            left: 1rem;
        }
        .horizontalNav {
            left: -10000px;
        }
        body {
            grid-template-rows: 4.5rem auto;
            grid-template-columns: 18vw 80vw;
        }
        main {
            /*     background-color: #F7BFB4; */
                color: #3f3433;
                grid-row: 2/2;
                grid-column: 2/2;
        }
        .headingScroll {
            top: 4rem;
        }
        img {
            max-width: 50%;
        }
}

/* LARGE */
@media screen and (min-width: 1024px) {
    /* the default page settign before implementation of breakpoints seems to work well for this size */
    p {
        font-size: 1.25rem;
        line-height: 1.75rem;
    }
    ol, ul {
        font-size: 1.25rem;
        line-height: 1.75rem;
    }
}

/* XL */
@media screen and (min-width: 1280px) {
    /* had to add another nav and define them with classes feels very hacky */
    .verticalNav {
        top: 4.5rem;
        width: 10vw;
        padding: 1rem;
    }
    .horizontalNav {
        left: -10000px;
    }
    body {
        grid-template-columns: 11.5vw auto;
    }
    p {
        font-size: 1.5rem;
        line-height: 2rem;
    }
    ol, ul {
        font-size: 1.5rem;
        line-height: 2rem;
    }
}

/* 2XL */
@media screen and (min-width: 1536px) {
    /* grid for materials used in 3d prionting section */
    /* i thought it would be cool to have the table showcaseing the different material properties surounded by the more in depth explaination */
    .articleMatsGrid {
        display: grid;
        grid-template-rows: auto auto auto auto auto;
        grid-template-columns: auto auto auto auto auto;
    }
    .matsIntro {
        grid-row: 2/3;
        grid-column: 1/6;
        text-align: center;
    }
    .table {
        grid-row: 3/4;
        grid-column: 2/5;
        text-align: center;
        padding: 0.5rem;
    }
    .topic1 {
        grid-row: 3/4;
        grid-column: 1/2;
    }
    .topic2 {
        grid-row: 3/4;
        grid-column: 5/6;
    }
    .topic3 {
        grid-row: 4/5;
        grid-column: 1/6;
    }
    .topic4 {
        grid-row: 5/6;
        grid-column: 1/6;
    }
    .topic5 {
        grid-row: 6/7;
        grid-column: 1/6;
    }
    p {
        font-size: 1.75rem;
        line-height: 2.2rem;
    }
    ol, ul {
        font-size: 1.75rem;
        line-height: 2.2rem;
    }
}